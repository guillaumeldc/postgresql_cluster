---
- name: remove_cluster.yml | Remove PostgreSQL HA Cluster
  hosts: postgres_cluster
  become: true
  pre_tasks:
    - name: "Set variable: ansible_python_interpreter"
      ansible.builtin.set_fact:
        ansible_python_interpreter: "/usr/bin/env python3"
      when: "'python3' not in (ansible_python_interpreter | default(''))"

    - name: Include main variables
      ansible.builtin.include_vars: "vars/main.yml"
    - name: Include OS-specific variables
      ansible.builtin.include_vars: "vars/{{ ansible_os_family }}.yml"
  tasks:
    - block:
        - name: Stop Patroni service
          ansible.builtin.service:
            name: patroni
            state: stopped
            enabled: false
        - name: Delete PostgreSQL database content
          ansible.builtin.file:
            path: "{{ postgresql_data_dir }}"
            state: absent
        - name: Stop PostgreSQL service
          ansible.builtin.service:
            name: postgresql
            state: stopped
            enabled: false

        - name: Remove PostgreSQL data directory
          ansible.builtin.file:
            path: /var/lib/postgresql
            state: absent

        - name: Uninstall PostgreSQL and related packages
          ansible.builtin.apt:
            name:
              - postgresql
              - postgresql-client
              - postgresql-contrib
            state: absent
            purge: yes
      when: remove_postgres | default(true) | bool
      ignore_errors: true
    - block:
        - name: Delete PgBackRest repository
          ansible.builtin.file:
            # path: pgbackrest_conf global repo1-path
            path: /var/lib/pgbackrest
            state: absent
        - name: Delete PgBackRest cron
          ansible.builtin.file:
            path: /etc/cron.d/pgbackrest
            state: absent
      when: pgbackrest_install | default(true) | bool
      ignore_errors: true

- name: remove_cluster.yml | Consul Cluster Play
  hosts: consul_instances
  become: true
  pre_tasks:
    - name: Include main variables
      ansible.builtin.include_vars: "vars/main.yml"
  tasks:
    - block:
        - name: Stop Consul service
          ansible.builtin.service:
            name: consul
            state: stopped
            enabled: false
        - name: Delete Consul content
          ansible.builtin.file:
            path: "{{ consul_data_path }}"
            state: absent
        - name: Delete Consul serivce
          ansible.builtin.file:
            path: /lib/systemd/system/consul.service
            state: absent
      when: remove_consul | default(true) | bool
      ignore_errors: true

- name: Revert DNS configuration to use Netplan settings
  hosts: consul_instances
  become: yes
  vars:
    netplan_renderer: networkd 
  tasks:

    - name: Stop and disable dnsmasq service
      systemd:
        name: dnsmasq
        enabled: no
        state: stopped

    - name: Remove dnsmasq package (optional)
      apt:
        name: dnsmasq
        state: absent
      when: remove_dnsmasq | default(False)

    - name: Remove dnsmasq configuration files
      file:
        path: "{{ item }}"
        state: absent
        force: yes
      loop:
        - /etc/dnsmasq.conf
        - /etc/dnsmasq.d
      ignore_errors: yes

    - name: Ensure systemd-resolved is enabled and running
      systemd:
        name: systemd-resolved
        enabled: yes
        state: started

    - name: Check if /etc/resolv.conf is a symbolic link
      stat:
        path: /etc/resolv.conf
      register: resolv_conf_stat

    - name: Remove resolv.conf if it's not a symlink
      file:
        path: /etc/resolv.conf
        state: absent
        force: yes
      when: resolv_conf_stat.stat.exists and not resolv_conf_stat.stat.islnk

    - name: Ensure /etc/resolv.conf is a symlink to /run/systemd/resolve/stub-resolv.conf
      file:
        src: /run/systemd/resolve/stub-resolv.conf
        dest: /etc/resolv.conf
        state: link
        force: yes

    - name: Apply Netplan configuration
      command: netplan apply

    - name: Restart systemd-networkd
      systemd:
        name: systemd-networkd
        state: restarted
      when: netplan_renderer == 'networkd'

    - name: Restart NetworkManager
      systemd:
        name: NetworkManager
        state: restarted
      when: netplan_renderer == 'NetworkManager'

    - name: Verify DNS resolution
      shell: ping -c 1 www.google.com
      register: ping_output
      failed_when: ping_output.rc != 0
      ignore_errors: yes

    - name: Display DNS resolution status
      debug:
        msg: "DNS resolution test result: {{ ping_output.stdout }}"



- name: remove_cluster.yml | Etcd Cluster Play
  hosts: etcd_cluster
  become: true
  pre_tasks:
    - name: Include main variables
      ansible.builtin.include_vars: "vars/main.yml"
  tasks:
    - block:
        - name: Stop Etcd service
          ansible.builtin.service:
            name: etcd
            state: stopped
            enabled: false
        - name: Delete Etcd content
          ansible.builtin.file:
            path: "{{ etcd_data_dir }}/member"
            state: absent
      when: remove_etcd | default(true) | bool
      ignore_errors: true
